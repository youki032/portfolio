<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:security="http://www.springframework.org/schema/security"

	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security.xsd
        ">


	<!-- 페이지 컨트롤러를 등록한다. 
	    <context:include-filter type="" expression=""/> : 자동 스캔 대상에 포함시킬 클래스
      <context:exclude-filter type="" expression=""/> : 포함시키지 않을 클래스          -->
  <context:component-scan base-package="net.spring.board.controller" ></context:component-scan>


  <!--  security 어노테이션 사용 -->
  <security:global-method-security pre-post-annotations="enabled" />
	
	
  <mvc:annotation-driven />
	
	
	<mvc:resources mapping="/resources/**" location="/resources/" />
	<mvc:resources mapping="/files/**" location="/files/" />




	<!-- 기존의 view resolver 교체 -->
	<bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"    value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix"       value="/WEB-INF/views/" />
		<property name="suffix"       value=".jsp" />
		<property name="contentType"  value="text/html; charset=UTF-8"/>
	</bean>
	
   
   
   <!-- Exception Resolver -->
   <bean id="simpleMappingExceptionResolver" class="net.spring.board.util.ExceptionResolver">
      <property name="exceptionMappings">
          <map>
              <entry key="NullPointerException" value="/error/nullPointerError"/>
              <entry key="DatabaseException" value="/error/databaseError"/>
          </map>    
      </property>
       <!-- See note below on how this interacts with Spring Boot -->
<!--       <property name="defaultErrorView" value="error"/> -->
<!--       <property name="exceptionAttribute" value="ex"/> -->
      
      <!-- Name of logger to use to log exceptions. Unset by default, so logging disabled -->
<!--       <property name="warnLogCategory" value="example.MvcLogger"/> -->
   </bean>
   
  

	<!-- 멀티파트 요청 데이터를 분해하는 일을 하는 객체를 등록. -->
<!-- 	multipartResolver
      filterMultipartResolver-->
	<bean id="filterMultipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		  <property name="maxUploadSize" value="104857600" /><!-- 100mb -->
<!-- 		<property name="defaultEncoding" value="UTF-8" /> -->
	</bean>



  
  <!-- log interceptor -->
  <mvc:interceptors>
    <mvc:interceptor>
       <mvc:mapping path="/**"/>
       <mvc:exclude-mapping path="/resources/**"/>
          <bean class="net.spring.board.logger.LoggerInterceptor" id="loggerInterceptor"/>
    </mvc:interceptor>
  </mvc:interceptors>

  
  <mvc:interceptors>
      <mvc:interceptor>
        <mvc:mapping path="/article/change"/>
        <bean id="webContentInterceptor" class="org.springframework.web.servlet.mvc.WebContentInterceptor">
          <property name="cacheSeconds" value="0"/>
          <property name="useExpiresHeader" value="true"/>
          <property name="useCacheControlHeader" value="true"/>
          <property name="useCacheControlNoStore" value="true"/>
        </bean>
      </mvc:interceptor>
    </mvc:interceptors>
  


</beans>
